{"version":3,"sources":["../../../src/components/widgets/Dropdown.js"],"names":["Dropdown","props","onChange","bind","selection","multi","valueKey","map","s","backspaceToRemoveMessage","minWidth","placeholder","clearable","value","options","searchable","optionRenderer","valueRenderer","noResultsText","disabled","className","width","_","localize","dropdownStyle","opts","slice","i","length","label","dropdownContainerClass","backgroundDark","defaultProps","propTypes","string","bool","func","isRequired","array","oneOfType","object","number","any"],"mappings":"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","file":"Dropdown.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport Select from 'react-select';\nimport classnames from 'classnames';\nimport {localize} from 'lib';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(selection) {\n    const {multi, onChange, valueKey} = this.props;\n\n    if (!selection) {\n      return onChange(null);\n    } else if (multi) {\n      return onChange(selection.map(s => s[valueKey]));\n    }\n\n    return onChange(selection[valueKey]);\n  }\n\n  render() {\n    const {\n      backspaceToRemoveMessage,\n      minWidth,\n      placeholder,\n      clearable,\n      value,\n      options,\n      searchable,\n      multi,\n      optionRenderer,\n      valueRenderer,\n      noResultsText,\n      valueKey,\n      disabled,\n      className,\n      width,\n      localize: _,\n    } = this.props;\n\n    const dropdownStyle = {minWidth};\n    if (width) {\n      dropdownStyle.width = width;\n    }\n\n    const opts = options.slice();\n    for (let i = 0; i < opts.length; i++) {\n      if (typeof opts[i] === 'string') {\n        opts[i] = {label: opts[i], [valueKey]: opts[i]};\n      }\n    }\n\n    const dropdownContainerClass = classnames('dropdown-container', {\n      'dropdown--dark': this.props.backgroundDark,\n    });\n\n    return (\n      <div className={dropdownContainerClass} style={dropdownStyle}>\n        <Select\n          backspaceToRemoveMessage={backspaceToRemoveMessage}\n          placeholder={placeholder || _('Select an Option')}\n          clearable={clearable}\n          value={value}\n          options={opts}\n          searchable={searchable}\n          onChange={this.onChange}\n          multi={multi}\n          optionRenderer={optionRenderer}\n          valueRenderer={valueRenderer}\n          noResultsText={noResultsText || _('No Results')}\n          valueKey={valueKey}\n          disabled={disabled}\n          className={className}\n        />\n      </div>\n    );\n  }\n}\n\nDropdown.defaultProps = {\n  clearable: true,\n  multi: false,\n  searchable: false,\n  minWidth: '120px',\n  valueKey: 'value',\n  disabled: false,\n};\n\nDropdown.propTypes = {\n  backspaceToRemoveMessage: PropTypes.string,\n  backgroundDark: PropTypes.bool,\n  clearable: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  searchable: PropTypes.bool,\n  minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  valueKey: PropTypes.string,\n  value: PropTypes.any,\n  multi: PropTypes.bool,\n  optionRenderer: PropTypes.func,\n  valueRenderer: PropTypes.func,\n  noResultsText: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  localize: PropTypes.func,\n};\n\nexport default localize(Dropdown);\n"]}