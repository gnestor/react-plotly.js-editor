{"version":3,"sources":["../../src/components/PanelMenuWrapper.js"],"names":["PanelsWithSidebar","props","opts","computeMenuOptions","state","group","name","panel","panels","setPanel","bind","renderSection","setState","section","i","type","plotly_editor_traits","sidebar_element","key","children","sections","groupLookup","groupIndex","Children","forEach","child","obj","hasOwnProperty","length","push","menuOpts","map","propTypes","node"],"mappings":"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","file":"PanelMenuWrapper.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, {cloneElement, Component} from 'react';\nimport SidebarGroup from './sidebar/SidebarGroup';\nimport {bem} from 'lib';\n\nclass PanelsWithSidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    const opts = this.computeMenuOptions(props);\n\n    this.state = {\n      group: opts[0].name,\n      panel: opts[0].panels[0],\n    };\n\n    this.setPanel = this.setPanel.bind(this);\n    this.renderSection = this.renderSection.bind(this);\n  }\n\n  setPanel(group, panel) {\n    this.setState({group, panel});\n  }\n\n  renderSection(section, i) {\n    if (\n      section.type &&\n      (section.type.plotly_editor_traits || {}).sidebar_element\n    ) {\n      return cloneElement(section, {key: i});\n    }\n    return (\n      <SidebarGroup\n        key={i}\n        selectedGroup={this.state.group}\n        selectedPanel={this.state.panel}\n        group={section.name}\n        panels={section.panels}\n        onChangeGroup={this.setPanel}\n      />\n    );\n  }\n\n  computeMenuOptions(props) {\n    const {children} = props;\n    const sections = [];\n    const groupLookup = {};\n    let groupIndex;\n\n    React.Children.forEach(children, child => {\n      const group = child.props.group;\n      const name = child.props.name;\n\n      if (group && name) {\n        let obj;\n        if (groupLookup.hasOwnProperty(group)) {\n          groupIndex = groupLookup[group];\n          obj = sections[groupIndex];\n        } else {\n          groupLookup[group] = sections.length;\n          obj = {name: group, panels: []};\n          sections.push(obj);\n        }\n        obj.panels.push(name);\n      }\n\n      if ((child.type.plotly_editor_traits || {}).sidebar_element) {\n        sections.push(child);\n      }\n    });\n\n    return sections;\n  }\n\n  render() {\n    const menuOpts = this.computeMenuOptions(this.props);\n\n    return (\n      <div className={bem('plotly-editor', 'wrapper')}>\n        <div className={bem('sidebar')}>{menuOpts.map(this.renderSection)}</div>\n        {React.Children.map(\n          this.props.children,\n          (child, i) =>\n            this.state.group !== child.props.group ||\n            this.state.panel !== child.props.name\n              ? null\n              : cloneElement(child, {key: i})\n        )}\n      </div>\n    );\n  }\n}\n\nPanelsWithSidebar.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PanelsWithSidebar;\n"]}