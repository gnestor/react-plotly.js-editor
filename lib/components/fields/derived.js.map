{"version":3,"sources":["../../../src/components/fields/derived.js"],"names":["AxisAnchorDropdown","modifyPlotProps","props","context","plotProps","_","localize","options","fullContainer","_subplot","includes","fullLayout","_subplots","yaxis","map","label","axis","value","xaxis","push","clearable","AxisOverlayDropdown","filter","_id","option","AxisSide","startsWith","CanvasSize","updateContainer","container","isVisible","autosize","attr","ContourNumeric","autocontour","TraceOrientation","type","fullValue","y","length","ysrc","x","xsrc","ybins","xbins","AxesRange","autorange","UnconnectedNumericFraction","propTypes","defaultProps","units","showSlider","numericFractionModifyPlotProps","attrMeta","updatePlot","min","max","Math","round","v","NumericFraction","NumericFractionDomain","overlaying","LayoutNumericFraction","supplyPlotProps","LayoutNumericFractionInverse","AnnotationArrowRef","xref","yref","currentAxisRef","Error","computeAxesRefOptions","AnnotationRef","axref","ayref","currentOffsetRef","update","PositioningRef","PositioningNumeric","step","axes","propsAttr","i","ax","charAt","GeoScope","GeoProjections","geo","scope","HoverInfo","FillDropdown"],"mappings":"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","file":"derived.js","sourcesContent":["import isNumeric from 'fast-isnumeric';\nimport {UnconnectedDropdown} from './Dropdown';\nimport {UnconnectedFlaglist} from './Flaglist';\nimport {UnconnectedNumeric} from './Numeric';\nimport {UnconnectedRadio} from './Radio';\nimport {\n  connectLayoutToPlot,\n  connectToContainer,\n  getAllAxes,\n  getAxisTitle,\n  axisIdToAxisName,\n  supplyLayoutPlotProps,\n} from 'lib';\n\nexport const AxisAnchorDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = props;\n    let options = [];\n\n    if (\n      plotProps.fullContainer._subplot &&\n      plotProps.fullContainer._subplot.includes('xaxis')\n    ) {\n      options = context.fullLayout._subplots.yaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    } else if (\n      plotProps.fullContainer._subplot &&\n      plotProps.fullContainer._subplot.includes('yaxis')\n    ) {\n      options = context.fullLayout._subplots.xaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    }\n    options.push({label: _('Free'), value: 'free'});\n    plotProps.options = options;\n    plotProps.clearable = false;\n  },\n});\n\nexport const AxisOverlayDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    let options = [];\n    if (\n      plotProps.fullContainer._subplot &&\n      plotProps.fullContainer._subplot.includes('xaxis')\n    ) {\n      options = context.fullLayout._subplots.xaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    } else if (\n      plotProps.fullContainer._subplot &&\n      plotProps.fullContainer._subplot.includes('yaxis')\n    ) {\n      options = context.fullLayout._subplots.yaxis.map(axis => {\n        return {\n          label: getAxisTitle(context.fullLayout[axisIdToAxisName(axis)]),\n          value: axis,\n        };\n      });\n    }\n\n    // filter out the current axisID, can't overlay over itself\n    plotProps.options = options.filter(\n      option => context.fullContainer._id !== option.value\n    );\n\n    plotProps.clearable = true;\n  },\n});\n\nexport const AxisSide = connectToContainer(UnconnectedRadio, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const _ = props.localize;\n    if (\n      context.fullContainer._id &&\n      context.fullContainer._id.startsWith('y')\n    ) {\n      plotProps.options = [\n        {label: _('Left'), value: 'left'},\n        {label: _('Right'), value: 'right'},\n      ];\n      return;\n    }\n\n    if (\n      context.fullContainer._id &&\n      context.fullContainer._id.startsWith('x')\n    ) {\n      plotProps.options = [\n        {label: _('Bottom'), value: 'bottom'},\n        {label: _('Top'), value: 'top'},\n      ];\n      return;\n    }\n\n    plotProps.options = [\n      {label: _('Left'), value: 'left'},\n      {label: _('Right'), value: 'right'},\n      {label: _('Bottom'), value: 'bottom'},\n      {label: _('Top'), value: 'top'},\n    ];\n  },\n});\n\nexport const CanvasSize = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer, updateContainer, container} = plotProps;\n    if (plotProps.isVisible && fullContainer && fullContainer.autosize) {\n      plotProps.isVisible = false;\n      if (container[props.attr]) {\n        updateContainer({[props.attr]: {}});\n      }\n    }\n  },\n});\n\nexport const ContourNumeric = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer} = plotProps;\n    if (plotProps.isVisible && fullContainer && fullContainer.autocontour) {\n      plotProps.isVisible = false;\n    }\n  },\n});\n\nexport const TraceOrientation = connectToContainer(UnconnectedRadio, {\n  modifyPlotProps: (props, context, plotProps) => {\n    if (\n      context.container.type === 'box' &&\n      plotProps.fullValue === 'h' &&\n      context.container.y &&\n      context.container.y.length !== 0\n    ) {\n      context.updateContainer({\n        y: null,\n        ysrc: null,\n        x: context.container.y,\n        xsrc: context.container.ysrc,\n      });\n    }\n\n    if (\n      context.container.type === 'box' &&\n      plotProps.fullValue === 'v' &&\n      context.container.x &&\n      context.container.x.length !== 0\n    ) {\n      context.updateContainer({\n        x: null,\n        xsrc: null,\n        y: context.container.x,\n        ysrc: context.container.xsrc,\n      });\n    }\n\n    if (\n      context.container.type === 'histogram' &&\n      plotProps.fullValue === 'v' &&\n      context.container.y &&\n      context.container.y.length !== 0\n    ) {\n      context.updateContainer({\n        y: null,\n        ysrc: null,\n        ybins: null,\n        x: context.container.y,\n        xsrc: context.container.ysrc,\n        xbins: context.container.ybins,\n      });\n    }\n\n    if (\n      context.container.type === 'histogram' &&\n      plotProps.fullValue === 'h' &&\n      context.container.x &&\n      context.container.x.length !== 0\n    ) {\n      context.updateContainer({\n        x: null,\n        xsrc: null,\n        xbins: null,\n        y: context.container.x,\n        ysrc: context.container.xsrc,\n        ybins: context.container.xbins,\n      });\n    }\n  },\n});\n\nexport const AxesRange = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer} = plotProps;\n    if (plotProps.isVisible && fullContainer && fullContainer.autorange) {\n      plotProps.isVisible = false;\n    }\n    return plotProps;\n  },\n});\n\nclass UnconnectedNumericFraction extends UnconnectedNumeric {}\nUnconnectedNumericFraction.propTypes = UnconnectedNumeric.propTypes;\nUnconnectedNumericFraction.defaultProps = {\n  units: '%',\n  showSlider: true,\n};\n\nconst numericFractionModifyPlotProps = (props, context, plotProps) => {\n  const {attrMeta, fullValue, updatePlot} = plotProps;\n  const min = attrMeta.min || 0;\n  const max = attrMeta.max || 1;\n  if (isNumeric(fullValue)) {\n    plotProps.fullValue = Math.round(100 * (fullValue - min) / (max - min));\n  }\n\n  plotProps.updatePlot = v => {\n    if (isNumeric(v)) {\n      updatePlot(v / 100 * (max - min) + min);\n    } else {\n      updatePlot(v);\n    }\n  };\n  plotProps.max = 100;\n  plotProps.min = 0;\n};\n\nexport const NumericFraction = connectToContainer(UnconnectedNumericFraction, {\n  modifyPlotProps: numericFractionModifyPlotProps,\n});\n\nexport const NumericFractionDomain = connectToContainer(\n  UnconnectedNumericFraction,\n  {\n    modifyPlotProps: (props, context, plotProps) => {\n      numericFractionModifyPlotProps(props, context, plotProps);\n      if (context.container.overlaying) {\n        plotProps.isVisible = null;\n      }\n    },\n  }\n);\n\nexport const LayoutNumericFraction = connectLayoutToPlot(\n  connectToContainer(UnconnectedNumericFraction, {\n    supplyPlotProps: supplyLayoutPlotProps,\n    modifyPlotProps: numericFractionModifyPlotProps,\n  })\n);\n\nexport const LayoutNumericFractionInverse = connectLayoutToPlot(\n  connectToContainer(UnconnectedNumericFraction, {\n    supplyPlotProps: supplyLayoutPlotProps,\n    modifyPlotProps: (props, context, plotProps) => {\n      const {attrMeta, fullValue, updatePlot} = plotProps;\n      if (isNumeric(fullValue)) {\n        plotProps.fullValue = Math.round((1 - fullValue) * 100);\n      }\n\n      plotProps.updatePlot = v => {\n        if (isNumeric(v)) {\n          updatePlot(1 - v / 100);\n        } else {\n          updatePlot(v);\n        }\n      };\n\n      // Also take the inverse of max and min.\n      if (attrMeta) {\n        if (isNumeric(attrMeta.min)) {\n          plotProps.max = (1 - attrMeta.min) * 100;\n        }\n\n        if (isNumeric(attrMeta.max)) {\n          plotProps.min = (1 - attrMeta.max) * 100;\n        }\n      }\n    },\n  })\n);\n\nexport const AnnotationArrowRef = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer: {xref, yref}} = context;\n\n    let currentAxisRef;\n    if (props.attr === 'axref') {\n      currentAxisRef = xref;\n    } else if (props.attr === 'ayref') {\n      currentAxisRef = yref;\n    } else {\n      throw new Error(\n        'AnnotationArrowRef must be given either \"axref\" or \"ayref\" as attrs. ' +\n          `Instead was given \"${props.attr}\".`\n      );\n    }\n\n    if (currentAxisRef === 'paper') {\n      // If currentAxesRef is paper provide all axes options to user.\n\n      plotProps.options = [\n        {label: 'in pixels', value: 'pixel'},\n        ...computeAxesRefOptions(getAllAxes(context.fullLayout), props.attr),\n      ];\n    } else {\n      // If currentAxesRef is an actual axes then offer that value as the only\n      // axes option.\n      plotProps.options = [\n        {label: 'in pixels', value: 'pixel'},\n        {label: 'according to axis', value: currentAxisRef},\n      ];\n    }\n\n    plotProps.clearable = false;\n  },\n});\n\nexport const AnnotationRef = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer: {axref, ayref}} = context;\n\n    let currentOffsetRef;\n    if (props.attr === 'xref') {\n      currentOffsetRef = axref;\n    } else if (props.attr === 'yref') {\n      currentOffsetRef = ayref;\n    } else {\n      throw new Error(\n        'AnnotationRef must be given either \"xref\" or \"yref\" as attrs. ' +\n          `Instead was given \"${props.attr}\".`\n      );\n    }\n\n    plotProps.options = [\n      {label: 'Canvas', value: 'paper'},\n      ...computeAxesRefOptions(getAllAxes(context.fullLayout), props.attr),\n    ];\n\n    if (currentOffsetRef !== 'pixel') {\n      plotProps.updatePlot = v => {\n        if (!plotProps.updateContainer) {\n          return;\n        }\n\n        /*\n         * If user is changing axis also change their a[x|y]ref arrow axis\n         * reference to match if the value is an axis value.\n         * Behaviour copied from plot.ly/create\n         */\n        const update = {[props.attr]: v};\n        if (v !== 'paper') {\n          update[`a${props.attr}`] = v;\n        }\n\n        plotProps.updateContainer(update);\n      };\n    }\n\n    plotProps.clearable = false;\n  },\n});\n\nexport const PositioningRef = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    plotProps.options = [\n      {label: 'Canvas', value: 'paper'},\n      ...computeAxesRefOptions(getAllAxes(context.fullLayout), props.attr),\n    ];\n\n    plotProps.clearable = false;\n  },\n});\n\nexport const PositioningNumeric = connectToContainer(UnconnectedNumeric, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {fullContainer, fullValue, updatePlot} = plotProps;\n    if (\n      fullContainer &&\n      (fullContainer[props.attr[0] + 'ref'] === 'paper' ||\n        fullContainer[props.attr[props.attr.length - 1] + 'ref'] === 'paper')\n    ) {\n      plotProps.units = '%';\n      plotProps.showSlider = true;\n      plotProps.max = 100;\n      plotProps.min = 0;\n      plotProps.step = 1;\n      if (isNumeric(fullValue)) {\n        plotProps.fullValue = Math.round(100 * fullValue);\n      }\n\n      plotProps.updatePlot = v => {\n        if (isNumeric(v)) {\n          updatePlot(v / 100);\n        } else {\n          updatePlot(v);\n        }\n      };\n    }\n  },\n});\n\nfunction computeAxesRefOptions(axes, propsAttr) {\n  const options = [];\n  for (let i = 0; i < axes.length; i++) {\n    const ax = axes[i];\n    if (\n      ax._id.charAt(0) === propsAttr.charAt(0) ||\n      ax._id.charAt(0) === propsAttr.charAt(1)\n    ) {\n      const label = getAxisTitle(ax);\n      options.push({label, value: ax._id});\n    }\n  }\n\n  return options;\n}\n\nexport const GeoScope = connectLayoutToPlot(\n  connectToContainer(UnconnectedDropdown, {\n    supplyPlotProps: (props, context) => {\n      const {localize: _} = props;\n      const options = [\n        {label: _('World'), value: 'world'},\n        {label: _('USA'), value: 'usa'},\n        {label: _('Europe'), value: 'europe'},\n        {label: _('Asia'), value: 'asia'},\n        {label: _('Africa'), value: 'africa'},\n        {label: _('North America'), value: 'north america'},\n        {label: _('South America'), value: 'south america'},\n      ];\n      return {...supplyLayoutPlotProps(props, context), options};\n    },\n  })\n);\n\nexport const GeoProjections = connectLayoutToPlot(\n  connectToContainer(UnconnectedDropdown, {\n    supplyPlotProps: (props, context) => {\n      const {localize: _} = props;\n      let options = [\n        {label: _('Equirectangular'), value: 'equirectangular'},\n        {label: _('Mercator'), value: 'mercator'},\n        {label: _('Orthographic'), value: 'orthographic'},\n        {label: _('Natural Earth'), value: 'naturalEarth'},\n        {label: _('Kavrayskiy7'), value: 'kavrayskiy7'},\n        {label: _('Miller'), value: 'miller'},\n        {label: _('Robinson'), value: 'robinson'},\n        {label: _('Eckert4'), value: 'eckert4'},\n        {label: _('Azimuthal Equal Area'), value: 'azimuthalEqualArea'},\n        {label: _('Azimuthal Equidistant'), value: 'azimuthalEquidistant'},\n        {label: _('Conic Equal Area'), value: 'conicEqualArea'},\n        {label: _('Conic Conformal'), value: 'conicConformal'},\n        {label: _('Conic Equidistant'), value: 'conicEquidistant'},\n        {label: _('Gnomonic'), value: 'gnomonic'},\n        {label: _('Stereographic'), value: 'stereographic'},\n        {label: _('Mollweide'), value: 'mollweide'},\n        {label: _('Hammer'), value: 'hammer'},\n        {label: _('Transverse Mercator'), value: 'transverseMercator'},\n        {label: _('Winkel Tripel'), value: 'winkel3'},\n        {label: _('Aitoff'), value: 'aitoff'},\n        {label: _('Sinusoidal'), value: 'sinusoidal'},\n      ];\n\n      if (\n        context.fullLayout &&\n        context.fullLayout.geo &&\n        context.fullLayout.geo.scope === 'usa'\n      ) {\n        options = [{label: _('Albers USA'), value: 'albers usa'}];\n      }\n\n      return {...supplyLayoutPlotProps(props, context), options};\n    },\n  })\n);\n\nexport const HoverInfo = connectToContainer(UnconnectedFlaglist, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = props;\n    let options = [\n      {label: _('X'), value: 'x'},\n      {label: _('Y'), value: 'y'},\n      {label: _('Z'), value: 'z'},\n    ];\n\n    if (context.container.type === 'choropleth') {\n      options = [\n        {label: _('Location'), value: 'location'},\n        {label: _('Values'), value: 'z'},\n        {label: _('Text'), value: 'text'},\n        {label: _('Name'), value: 'name'},\n      ];\n    }\n\n    if (context.container.type === 'scattergeo') {\n      options = [\n        {label: _('Longitude'), value: 'loc'},\n        {label: _('Latitude'), value: 'lat'},\n        {label: _('Location'), value: 'location'},\n        {label: _('Text'), value: 'text'},\n        {label: _('Name'), value: 'name'},\n      ];\n    }\n\n    if (context.container.type === 'scattermapbox') {\n      options = [\n        {label: _('Longitude'), value: 'loc'},\n        {label: _('Latitude'), value: 'lat'},\n        {label: _('Text'), value: 'text'},\n        {label: _('Name'), value: 'name'},\n      ];\n    }\n\n    if (context.container.type === 'scatterternary') {\n      options = [\n        {label: _('A'), value: 'a'},\n        {label: _('B'), value: 'b'},\n        {label: _('C'), value: 'c'},\n        {label: _('Text'), value: 'text'},\n        {label: _('Name'), value: 'name'},\n      ];\n    }\n\n    plotProps.options = options;\n  },\n});\n\nexport const FillDropdown = connectToContainer(UnconnectedDropdown, {\n  modifyPlotProps: (props, context, plotProps) => {\n    const {localize: _} = props;\n\n    let options = [\n      {label: _('None'), value: 'none'},\n      {label: _('Y = 0'), value: 'tozeroy'},\n      {label: _('X = 0'), value: 'tozerox'},\n      {label: _('Previous Y'), value: 'tonexty'},\n      {label: _('Previous X'), value: 'tonextx'},\n    ];\n\n    if (context.container.type === 'scatterternary') {\n      options = [\n        {label: _('None'), value: 'none'},\n        {label: _('To Self'), value: 'toself'},\n        {label: _('To Next'), value: 'tonext'},\n      ];\n    }\n\n    plotProps.options = options;\n    plotProps.clearable = false;\n  },\n});\n"]}