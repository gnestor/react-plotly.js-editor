{"version":3,"sources":["../../src/lib/connectLayoutToPlot.js"],"names":["connectLayoutToPlot","getLayoutContext","layout","context","fullLayout","plotly","onUpdate","updateContainer","type","UPDATE_LAYOUT","payload","update","getValObject","PlotSchema","getLayoutValObject","attr","parts","container","fullContainer","WrappedComponent","config","LayoutConnectedComponent","props","supplyPlotProps","plotProps","modifyPlotProps","displayName","contextTypes","object","func","childContextTypes","plotly_editor_traits"],"mappings":";;;;;;;;;kBAsCwBA,mB;;AAtCxB;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;AAEO,IAAMC,8CAAmB,SAAnBA,gBAAmB,UAAW;AAAA,MAClCC,MADkC,GACMC,OADN,CAClCD,MADkC;AAAA,MAC1BE,UAD0B,GACMD,OADN,CAC1BC,UAD0B;AAAA,MACdC,MADc,GACMF,OADN,CACdE,MADc;AAAA,MACNC,QADM,GACMH,OADN,CACNG,QADM;;;AAGzC,MAAMC,kBAAkB,SAAlBA,eAAkB,SAAU;AAChC,QAAI,CAACD,QAAL,EAAe;AACb;AACD;AACDA,aAAS;AACPE,YAAM,0BAAeC,aADd;AAEPC,eAAS;AACPC;AADO;AAFF,KAAT;AAMD,GAVD;;AAYA,MAAIC,qBAAJ;AACA,MAAIP,MAAJ,EAAY;AACVO,mBAAe;AAAA,aACbP,OAAOQ,UAAP,CAAkBC,kBAAlB,CACEV,UADF,EAEE,+BAAe,EAAf,EAAmBW,IAAnB,EAAyBC,KAF3B,CADa;AAAA,KAAf;AAKD;;AAED,SAAO;AACLJ,8BADK;AAELL,oCAFK;AAGLU,eAAWf,MAHN;AAILgB,mBAAed;AAJV,GAAP;AAMD,CA9BM;;AAgCQ,SAASJ,mBAAT,CAA6BmB,gBAA7B,EAA4D;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAAA,MACnEC,wBADmE;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAuBrD;AAChB,eAAOpB,iBAAiB,KAAKE,OAAtB,CAAP;AACD;AAzBsE;AAAA;AAAA,+BA2B9D;AACP,eAAO,8BAAC,gBAAD,EAAsB,KAAKmB,KAA3B,CAAP;AACD;AA7BsE;AAAA;AAAA,sCAEhDA,KAFgD,EAEzCnB,OAFyC,EAEhC;AACrC,YAAIiB,OAAOG,eAAX,EAA4B;AAC1B,iBAAOH,OAAOG,eAAP,CAAuBD,KAAvB,EAA8BnB,OAA9B,CAAP;AACD;AACD,YAAIgB,iBAAiBI,eAArB,EAAsC;AACpC,iBAAOJ,iBAAiBI,eAAjB,CAAiCD,KAAjC,EAAwCnB,OAAxC,CAAP;AACD;AACD,eAAO,0BAAgBmB,KAAhB,EAAuBnB,OAAvB,CAAP;AACD;;AAED;AACA;;AAbuE;AAAA;AAAA,sCAchDmB,KAdgD,EAczCnB,OAdyC,EAchCqB,SAdgC,EAcrB;AAChD,YAAIL,iBAAiBM,eAArB,EAAsC;AACpCN,2BAAiBM,eAAjB,CAAiCH,KAAjC,EAAwCnB,OAAxC,EAAiDqB,SAAjD;AACD;AACD,YAAIJ,OAAOK,eAAX,EAA4B;AAC1BL,iBAAOK,eAAP,CAAuBH,KAAvB,EAA8BnB,OAA9B,EAAuCqB,SAAvC;AACD;AACF;AArBsE;;AAAA;AAAA;;AAgCzEH,2BAAyBK,WAAzB,uBAAyD,yBACvDP,gBADuD,CAAzD;;AAIAE,2BAAyBM,YAAzB,GAAwC;AACtCzB,YAAQ,oBAAU0B,MADoB;AAEtCxB,gBAAY,oBAAUwB,MAFgB;AAGtCvB,YAAQ,oBAAUuB,MAHoB;AAItCtB,cAAU,oBAAUuB;AAJkB,GAAxC;;AAOAR,2BAAyBS,iBAAzB,GAA6C;AAC3ClB,kBAAc,oBAAUiB,IADmB;AAE3CtB,qBAAiB,oBAAUsB,IAFgB;AAG3CZ,eAAW,oBAAUW,MAHsB;AAI3CV,mBAAe,oBAAUU;AAJkB,GAA7C;;AA3CyE,MAkDlEG,oBAlDkE,GAkD1CZ,gBAlD0C,CAkDlEY,oBAlDkE;;AAmDzEV,2BAAyBU,oBAAzB,GAAgDA,oBAAhD;;AAEA,SAAOV,wBAAP;AACD","file":"connectLayoutToPlot.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {getDisplayName, unpackPlotProps} from '../lib';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport const getLayoutContext = context => {\n  const {layout, fullLayout, plotly, onUpdate} = context;\n\n  const updateContainer = update => {\n    if (!onUpdate) {\n      return;\n    }\n    onUpdate({\n      type: EDITOR_ACTIONS.UPDATE_LAYOUT,\n      payload: {\n        update,\n      },\n    });\n  };\n\n  let getValObject;\n  if (plotly) {\n    getValObject = attr =>\n      plotly.PlotSchema.getLayoutValObject(\n        fullLayout,\n        nestedProperty({}, attr).parts\n      );\n  }\n\n  return {\n    getValObject,\n    updateContainer,\n    container: layout,\n    fullContainer: fullLayout,\n  };\n};\n\nexport default function connectLayoutToPlot(WrappedComponent, config = {}) {\n  class LayoutConnectedComponent extends Component {\n    static supplyPlotProps(props, context) {\n      if (config.supplyPlotProps) {\n        return config.supplyPlotProps(props, context);\n      }\n      if (WrappedComponent.supplyPlotProps) {\n        return WrappedComponent.supplyPlotProps(props, context);\n      }\n      return unpackPlotProps(props, context);\n    }\n\n    // Run the inner modifications first and allow more recent modifyPlotProp\n    // config function to modify last.\n    static modifyPlotProps(props, context, plotProps) {\n      if (WrappedComponent.modifyPlotProps) {\n        WrappedComponent.modifyPlotProps(props, context, plotProps);\n      }\n      if (config.modifyPlotProps) {\n        config.modifyPlotProps(props, context, plotProps);\n      }\n    }\n\n    getChildContext() {\n      return getLayoutContext(this.context);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  LayoutConnectedComponent.displayName = `LayoutConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  LayoutConnectedComponent.contextTypes = {\n    layout: PropTypes.object,\n    fullLayout: PropTypes.object,\n    plotly: PropTypes.object,\n    onUpdate: PropTypes.func,\n  };\n\n  LayoutConnectedComponent.childContextTypes = {\n    getValObject: PropTypes.func,\n    updateContainer: PropTypes.func,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  LayoutConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return LayoutConnectedComponent;\n}\n"]}