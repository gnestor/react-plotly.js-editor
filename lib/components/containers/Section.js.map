{"version":3,"sources":["../../../src/components/containers/Section.js"],"names":["Section","props","context","children","menuPanel","sectionVisible","processAndSetChildren","nextProps","nextContext","isVisible","Children","map","child","type","plotly_editor_traits","is_menu_panel","is_axis_creator","data","fullContainer","length","index","container","attr","plotProps","supplyPlotProps","modifyPlotProps","no_visibility_forcing","name","propTypes","node","string","contextTypes"],"mappings":"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","file":"Section.js","sourcesContent":["import React, {Component, cloneElement} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  containerConnectedContextTypes,\n  localize,\n  unpackPlotProps,\n  traceTypeToAxisType,\n} from '../../lib';\n\nclass Section extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.children = null;\n    this.menuPanel = null;\n    this.sectionVisible = false;\n\n    this.processAndSetChildren(props, context);\n  }\n\n  componentWillReceiveProps(nextProps, nextContext) {\n    this.processAndSetChildren(nextProps, nextContext);\n  }\n\n  processAndSetChildren(nextProps, nextContext) {\n    const {isVisible} = unpackPlotProps(nextProps, nextContext);\n    this.sectionVisible = isVisible === true;\n\n    this.children = React.Children.map(nextProps.children, child => {\n      if ((child.type.plotly_editor_traits || {}).is_menu_panel) {\n        // Process the first menuPanel. Ignore the rest. MenuPanel does\n        // not affect visibility.\n        if (!this.menuPanel) {\n          this.menuPanel = child;\n        }\n        return null;\n      }\n\n      if ((child.type.plotly_editor_traits || {}).is_axis_creator) {\n        const {data, fullContainer} = this.context;\n\n        // for now, only allowing for cartesian chart types\n        if (\n          data.length > 1 &&\n          traceTypeToAxisType(data[fullContainer.index].type) === 'cartesian'\n        ) {\n          this.sectionVisible = true;\n          return cloneElement(child, {\n            isVisible: true,\n            container: this.context.container,\n            fullContainer: this.context.fullContainer,\n          });\n        }\n        this.sectionVisible = false;\n      } else if (child.props.attr) {\n        let plotProps;\n        if (child.type.supplyPlotProps) {\n          plotProps = child.type.supplyPlotProps(child.props, nextContext);\n          if (child.type.modifyPlotProps) {\n            child.type.modifyPlotProps(child.props, nextContext, plotProps);\n          }\n        } else {\n          plotProps = unpackPlotProps(child.props, nextContext);\n        }\n\n        // assign plotProps as a prop of children. If they are connectedToContainer\n        // it will see plotProps and skip recomputing them.\n        this.sectionVisible = this.sectionVisible || plotProps.isVisible;\n        return cloneElement(child, {plotProps});\n      } else if (\n        !(child.type.plotly_editor_traits || {}).no_visibility_forcing\n      ) {\n        // custom UI other than Info forces section visibility.\n        this.sectionVisible = true;\n      }\n      return child;\n    });\n  }\n\n  render() {\n    if (!this.sectionVisible) {\n      return null;\n    }\n    return (\n      <div className=\"section\">\n        <div className=\"section__heading\">\n          <div className=\"section__heading__text\">{this.props.name}</div>\n          {this.menuPanel}\n        </div>\n        {this.children}\n      </div>\n    );\n  }\n}\n\nSection.propTypes = {\n  children: PropTypes.node,\n  name: PropTypes.string,\n  attr: PropTypes.string,\n};\n\nSection.contextTypes = containerConnectedContextTypes;\nexport default localize(Section);\n"]}