{"version":3,"sources":["../../../src/components/fields/AxesSelector.js"],"names":["AxesSelector","props","context","axesTargetHandler","Error","axesOptions","axesTarget","_","localize","hasSecondaryAxis","some","option","axisGroup","fullLayout","_subplots","length","map","value","label","title","contextTypes","func","array","string","object","propTypes"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,Y;;;AACJ,wBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA,4HACpBD,KADoB,EACbC,OADa;;AAG1B,QAAI,CAACA,QAAQC,iBAAb,EAAgC;AAC9B,YAAM,IAAIC,KAAJ,CACJ,kEADI,CAAN;AAGD;AAPyB;AAQ3B;;;;6BAEQ;AAAA;;AAAA,qBAC8C,KAAKF,OADnD;AAAA,UACAC,iBADA,YACAA,iBADA;AAAA,UACmBE,WADnB,YACmBA,WADnB;AAAA,UACgCC,UADhC,YACgCA,UADhC;AAAA,UAEUC,CAFV,GAEe,KAAKN,KAFpB,CAEAO,QAFA;;AAGP,UAAMC,mBACJJ,eACAA,YAAYK,IAAZ,CAAiB,kBAAU;AACzB,eACEC,OAAOC,SAAP,IACA,OAAKV,OAAL,CAAaW,UAAb,CAAwBC,SAAxB,CAAkCH,OAAOC,SAAzC,EAAoDG,MAApD,GAA6D,CAF/D;AAID,OALD,CAFF;;AASA,UAAIN,gBAAJ,EAAsB;AACpB,eACE;AAAA;AAAA,uBAAW,KAAKR,KAAhB,IAAuB,OAAOM,EAAE,eAAF,CAA9B;AACE;AACE,qBAASF,YAAYW,GAAZ,CAAgB,kBAAU;AACjC,kBAAIL,OAAOM,KAAP,KAAiB,SAArB,EAAgC;AAC9B,uBAAO;AACLC,yBAAOP,OAAOQ,KADT;AAELF,yBAAON,OAAOM;AAFT,iBAAP;AAID;;AAED,qBAAON,MAAP;AACD,aATQ,CADX;AAWE,mBAAOL,UAXT;AAYE,sBAAUH,iBAZZ;AAaE,uBAAW;AAbb;AADF,SADF;AAmBD;;AAED,aACE;AAAA;AAAA,qBAAW,KAAKF,KAAhB,IAAuB,YAAvB;AACE;AACE,mBAASI,WADX;AAEE,wBAAcC,UAFhB;AAGE,0BAAgBH;AAHlB;AADF,OADF;AASD;;;;;;AAGHH,aAAaoB,YAAb,GAA4B;AAC1BjB,qBAAmB,oBAAUkB,IADH;AAE1BhB,eAAa,oBAAUiB,KAFG;AAG1BhB,cAAY,oBAAUiB,MAHI;AAI1BV,cAAY,oBAAUW;AAJI,CAA5B;;AAOAxB,aAAayB,SAAb,GAAyB;AACvBjB,YAAU,oBAAUa;AADG,CAAzB;;kBAIe,mBAASrB,YAAT,C","file":"AxesSelector.js","sourcesContent":["import Field from './Field';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../widgets/Dropdown';\nimport RadioBlocks from '../widgets/RadioBlocks';\nimport React, {Component} from 'react';\nimport {localize} from 'lib';\n\nclass AxesSelector extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    if (!context.axesTargetHandler) {\n      throw new Error(\n        'AxesSelector must be nested within a connectAxesToPlot component'\n      );\n    }\n  }\n\n  render() {\n    const {axesTargetHandler, axesOptions, axesTarget} = this.context;\n    const {localize: _} = this.props;\n    const hasSecondaryAxis =\n      axesOptions &&\n      axesOptions.some(option => {\n        return (\n          option.axisGroup &&\n          this.context.fullLayout._subplots[option.axisGroup].length > 1\n        );\n      });\n\n    if (hasSecondaryAxis) {\n      return (\n        <Field {...this.props} label={_('Axis to Style')}>\n          <Dropdown\n            options={axesOptions.map(option => {\n              if (option.value !== 'allaxes') {\n                return {\n                  label: option.title,\n                  value: option.value,\n                };\n              }\n\n              return option;\n            })}\n            value={axesTarget}\n            onChange={axesTargetHandler}\n            clearable={false}\n          />\n        </Field>\n      );\n    }\n\n    return (\n      <Field {...this.props} center>\n        <RadioBlocks\n          options={axesOptions}\n          activeOption={axesTarget}\n          onOptionChange={axesTargetHandler}\n        />\n      </Field>\n    );\n  }\n}\n\nAxesSelector.contextTypes = {\n  axesTargetHandler: PropTypes.func,\n  axesOptions: PropTypes.array,\n  axesTarget: PropTypes.string,\n  fullLayout: PropTypes.object,\n};\n\nAxesSelector.propTypes = {\n  localize: PropTypes.func,\n};\n\nexport default localize(AxesSelector);\n"]}