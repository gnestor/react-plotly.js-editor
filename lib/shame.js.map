{"version":3,"sources":["../src/shame.js"],"names":["maybeClearAxisTypes","graphDiv","traceIndexes","update","Array","isArray","_fullData","hasSrc","key","substr","length","clearAxisTypes","axLetters","gd","traces","i","trace","j","type","ax","axAttr","_name","typeAttr","layout","set"],"mappings":";;;;;;;AAGA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AACA;AAVA;;;AAWO,IAAMA,oDAAsB,SAAtBA,mBAAsB,CAACC,QAAD,EAAWC,YAAX,EAAyBC,MAAzB,EAAoC;AACrE,MAAI,CAACC,MAAMC,OAAN,CAAcJ,SAASK,SAAvB,CAAL,EAAwC;AACtC;AACD;AACD,MAAIC,SAAS,KAAb;AACA,OAAK,IAAMC,GAAX,IAAkBL,MAAlB,EAA0B;AACxB,QAAIK,IAAIC,MAAJ,CAAWD,IAAIE,MAAJ,GAAa,CAAxB,MAA+B,KAAnC,EAA0C;AACxCH,eAAS,IAAT;AACD;AACF;AACD,MAAIA,MAAJ,EAAY;AACVI,mBAAeV,QAAf,EAAyBC,YAAzB;AACD;AACF,CAbM;;AAeP,IAAMU,YAAY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAlB;AACA,SAASD,cAAT,CAAwBE,EAAxB,EAA4BC,MAA5B,EAAoC;AAClC,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,OAAOJ,MAA3B,EAAmCK,GAAnC,EAAwC;AACtC,QAAMC,QAAQH,GAAGP,SAAH,CAAaS,CAAb,CAAd;AACA,SAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1B,UAAMC,OAAON,UAAUK,CAAV,CAAb;AACA,UAAME,KAAK,yBAAUN,EAAV,EAAcG,MAAME,OAAO,MAAb,KAAwBA,IAAtC,CAAX;;AAEA;AACA;AACA;AACA,UAAIC,MAAMA,GAAGD,IAAH,KAAY,KAAtB,EAA6B;AAC3B,YAAME,SAASD,GAAGE,KAAlB;AACA,YAAMC,WAAWF,SAAS,OAA1B;AACA,uCAAeP,GAAGU,MAAlB,EAA0BD,QAA1B,EAAoCE,GAApC,CAAwC,IAAxC;AACD;AACF;AACF;AACF","file":"shame.js","sourcesContent":["/*\n * DELETE THIS FILE. EVERYTHING NEEDS TO FIND A HOME.\n */\nimport {getFromId} from 'plotly.js/src/plots/cartesian/axis_ids';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\n\n// Temporary fix for:\n// https://github.com/plotly/react-plotly.js-editor/issues/103\n// We should be able to remove this once the plotly.react method has\n// been integrated into react-plotly.js and released:\n// https://github.com/plotly/react-plotly.js/issues/2\nexport const maybeClearAxisTypes = (graphDiv, traceIndexes, update) => {\n  if (!Array.isArray(graphDiv._fullData)) {\n    return;\n  }\n  let hasSrc = false;\n  for (const key in update) {\n    if (key.substr(key.length - 3) === 'src') {\n      hasSrc = true;\n    }\n  }\n  if (hasSrc) {\n    clearAxisTypes(graphDiv, traceIndexes);\n  }\n};\n\nconst axLetters = ['x', 'y', 'z'];\nfunction clearAxisTypes(gd, traces) {\n  for (let i = 0; i < traces.length; i++) {\n    const trace = gd._fullData[i];\n    for (let j = 0; j < 3; j++) {\n      const type = axLetters[j];\n      const ax = getFromId(gd, trace[type + 'axis'] || type);\n\n      // Do not clear log type.\n      // Log type is never an auto result so must have been intentional.\n      // We are also skipping clearing 3D which could cause bugs with 3D.\n      if (ax && ax.type !== 'log') {\n        const axAttr = ax._name;\n        const typeAttr = axAttr + '.type';\n        nestedProperty(gd.layout, typeAttr).set(null);\n      }\n    }\n  }\n}\n"]}