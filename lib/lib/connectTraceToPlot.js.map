{"version":3,"sources":["../../src/lib/connectTraceToPlot.js"],"names":["connectTraceToPlot","WrappedComponent","TraceConnectedComponent","props","context","deleteTrace","bind","updateTrace","setLocals","nextProps","nextContext","traceIndexes","data","fullData","plotly","trace","length","fullTraceIndex","fullTrace","getValObject","PlotSchema","getTraceValObject","_fullInput","attr","parts","childContext","updateContainer","deleteContainer","container","fullContainer","multiValuedContainer","forEach","Object","keys","t","key","searchArrays","defaultContainer","icon","name","DEFAULT_FIN_CHART_TRACE_NAME","indexOf","replace","update","onUpdate","type","UPDATE_TRACES","payload","DELETE_TRACE","displayName","propTypes","arrayOf","number","isRequired","contextTypes","array","object","func","childContextTypes","plotly_editor_traits"],"mappings":"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","file":"connectTraceToPlot.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport nestedProperty from 'plotly.js/src/lib/nested_property';\nimport {\n  findFullTraceIndex,\n  getDisplayName,\n  plotlyTraceToCustomTrace,\n  renderTraceIcon,\n} from '../lib';\nimport {deepCopyPublic, setMultiValuedContainer} from './multiValues';\nimport {EDITOR_ACTIONS} from './constants';\n\nexport default function connectTraceToPlot(WrappedComponent) {\n  class TraceConnectedComponent extends Component {\n    constructor(props, context) {\n      super(props, context);\n\n      this.deleteTrace = this.deleteTrace.bind(this);\n      this.updateTrace = this.updateTrace.bind(this);\n      this.setLocals(props, context);\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n      this.setLocals(nextProps, nextContext);\n    }\n\n    setLocals(props, context) {\n      const {traceIndexes} = props;\n      const {data, fullData, plotly} = context;\n\n      const trace = traceIndexes.length > 0 ? data[traceIndexes[0]] : {};\n      const fullTraceIndex =\n        traceIndexes.length > 0\n          ? findFullTraceIndex(fullData, traceIndexes[0])\n          : findFullTraceIndex(fullData, 0);\n      const fullTrace = fullData[fullTraceIndex] || {};\n\n      let getValObject;\n      if (plotly) {\n        /*\n         * Since fullTrace._fullInput contains the _module.attributes key:\n         * https://github.com/plotly/plotly.js/blob/70f3f70ec5b306cf74630355676f5e318f685824/src/plot_api/plot_schema.js#L241\n         * this will work for all chart types. This needed to be adjusted as financial charts\n         * do not contain their 'true' attributes, but rather attributes of the trace types that are used to compose them\n        */\n        getValObject = attr =>\n          plotly.PlotSchema.getTraceValObject(\n            fullTrace._fullInput,\n            nestedProperty({}, attr).parts\n          );\n      }\n\n      this.childContext = {\n        getValObject,\n        updateContainer: this.updateTrace,\n        deleteContainer: this.deleteTrace,\n        container: trace,\n        fullContainer: fullTrace,\n      };\n\n      if (traceIndexes.length > 1) {\n        const multiValuedContainer = deepCopyPublic(fullTrace);\n        fullData.forEach(t =>\n          Object.keys(t).forEach(key =>\n            setMultiValuedContainer(multiValuedContainer, t, key, {\n              searchArrays: true,\n            })\n          )\n        );\n        this.childContext.fullContainer = multiValuedContainer;\n        this.childContext.defaultContainer = fullTrace;\n        this.childContext.container = {};\n      }\n\n      if (trace && fullTrace) {\n        this.icon = renderTraceIcon(plotlyTraceToCustomTrace(trace));\n        this.name = fullTrace.name;\n        const DEFAULT_FIN_CHART_TRACE_NAME = ' - increasing';\n        if (\n          fullTrace.name &&\n          fullTrace.name.indexOf(DEFAULT_FIN_CHART_TRACE_NAME) &&\n          !trace.name\n        ) {\n          this.name = fullTrace.name.replace(DEFAULT_FIN_CHART_TRACE_NAME, '');\n        }\n      }\n    }\n\n    getChildContext() {\n      return this.childContext;\n    }\n\n    updateTrace(update) {\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.UPDATE_TRACES,\n          payload: {\n            update,\n            traceIndexes: this.props.traceIndexes,\n          },\n        });\n      }\n    }\n\n    deleteTrace() {\n      if (this.context.onUpdate) {\n        this.context.onUpdate({\n          type: EDITOR_ACTIONS.DELETE_TRACE,\n          payload: {traceIndexes: this.props.traceIndexes},\n        });\n      }\n    }\n\n    render() {\n      return (\n        <WrappedComponent name={this.name} icon={this.icon} {...this.props} />\n      );\n    }\n  }\n\n  TraceConnectedComponent.displayName = `TraceConnected${getDisplayName(\n    WrappedComponent\n  )}`;\n\n  TraceConnectedComponent.propTypes = {\n    traceIndexes: PropTypes.arrayOf(PropTypes.number).isRequired,\n  };\n\n  TraceConnectedComponent.contextTypes = {\n    fullData: PropTypes.array,\n    data: PropTypes.array,\n    plotly: PropTypes.object,\n    onUpdate: PropTypes.func,\n  };\n\n  TraceConnectedComponent.childContextTypes = {\n    getValObject: PropTypes.func,\n    updateContainer: PropTypes.func,\n    deleteContainer: PropTypes.func,\n    defaultContainer: PropTypes.object,\n    container: PropTypes.object,\n    fullContainer: PropTypes.object,\n  };\n\n  const {plotly_editor_traits} = WrappedComponent;\n  TraceConnectedComponent.plotly_editor_traits = plotly_editor_traits;\n\n  return TraceConnectedComponent;\n}\n"]}